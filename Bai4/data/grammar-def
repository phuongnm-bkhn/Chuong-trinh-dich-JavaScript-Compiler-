////////////////////////////////////////////////////////////////////////////////////////
//
// dinh nghia token phai nam sau '%tokens:'
//		cac token name cach nhau bang dau ',' - khong duoc chua ki tu nao khac 
//
// dinh nghia trang thai suy dien / luat sinh
//		phan cac boi dau '->'
//		ben trai la token name nguon
//		ben phai la token name dich 
//		tap token dich co the phan cach boi dau |		
//		trong moi trang thai suy dien, cac token cach nhau 1 dau ' '
//
////////////////////////////////////////////////////////////////////////////////////////
%tokens:~,$

//%tokens:E,T,F,(,),*,+,id
//E->E + T|T
//T->T * F|F
//F->( E )|id

//E->T E'
//E'->+ T E'|~
//T->F T'
//T'->* F T'|~
//F->( E )|id

//%tokens:E,T,F,(,),*,+,id,S,H,G,I,K
//S->E|H * G
//H->I|K
//E->E + T|S * T|T|~
//T->T * F|F
//F->( E )|id



////////////////////////////////////////////////////////////////////////////////////////
// list token
////////////////////////////////////////////////////////////////////////////////////////
%tokens_start:S
%tokens:id,num,while,do,or,and,var,true,false
%tokens:S,S1,S_W,S_DW,stmt,stmtlst,block,while,(,),{,},;,/*,*/,blank,<,<=,>,>=,==,!=
%tokens:define,assign,id,ex,var,+,-,*,/,=,num,cond,conds,conds1,conds2,conds3,compare,val,val1,val2

////////////////////////////////////////////////////////////////////////////////////////
// luat sinh nay cho phep phan tich nhieu khoi lenh noi tiep nhau
// (neu ko co luat sinh nay ma viet truc tiep S :S_W | S_DW | stmt ... o luat sinh tiep theo)
// (khi do trong vi du o file test_input.js; yacc parse se dung lai sau ham do_while dau tien)
////////////////////////////////////////////////////////////////////////////////////////
S->S1|S S1

////////////////////////////////////////////////////////////////////////////////////////
// 1 khoi lenh S1 ( 1 khoi can phan tich ) co the la 1 khoi while,
// 1 khoi do-while hoac chi la 1 statement don le.
////////////////////////////////////////////////////////////////////////////////////////
S1->S_W|S_DW|stmt

////////////////////////////////////////////////////////////////////////////////////////
// 1 khoi lenh do-while hoan chinh se bao gom "do" + khoi lenh trong do-while + "while" 
// + dieu kien ...
////////////////////////////////////////////////////////////////////////////////////////
S_DW->do block while ( conds ) ;

////////////////////////////////////////////////////////////////////////////////////////
// 1 khoi lenh while hoan chinh se bao gom "while" + ( dieu kien ) + khoi lenh trong while ...
////////////////////////////////////////////////////////////////////////////////////////
S_W->while ( conds ) block ;

////////////////////////////////////////////////////////////////////////////////////////
// khoi lenh trong while va do-while bao gom nhieu statement, bao boc boi { }
////////////////////////////////////////////////////////////////////////////////////////
block->{ stmtlst }

////////////////////////////////////////////////////////////////////////////////////////
// stmtlst co the blank, 1 statement, hoac bao gom nhieu statement noi tiep nhau
// vi o day da co blank nen ko can viet "statement | stmtlst statement" 
// giong nhu luat sinh so 1
////////////////////////////////////////////////////////////////////////////////////////
stmtlst->stmtlst stmt|stmt

////////////////////////////////////////////////////////////////////////////////////////
// 1 statement co the la 1 dinh nghia hoac la 1 lenh gan gia tri
////////////////////////////////////////////////////////////////////////////////////////
stmt->define|assign

////////////////////////////////////////////////////////////////////////////////////////
// dinh nghia la 1 lenh gan gia tri co var phia truoc :D
////////////////////////////////////////////////////////////////////////////////////////
define->var assign

////////////////////////////////////////////////////////////////////////////////////////
// ham nay cho phep noi nhieu dieu kien voi nhau bang or hoac and
////////////////////////////////////////////////////////////////////////////////////////
conds->conds or conds1|conds1
conds1->conds1 and conds2|conds2
conds2->( conds )|conds3
conds3->true|false|id compare val

compare-><|<=|>|>=|==|!=

////////////////////////////////////////////////////////////////////////////////////////
// gan gia tri tuc la id = phep toan
// val la 1 gia tri 1 bieu thuc + | - | val1 
// val1 la 1 gia tri 1 bieu thuc * | / | val2 
// val2 la 1 gia tri 1 bieu thuc uu tien trong -> () | id hoac num
////////////////////////////////////////////////////////////////////////////////////////
//assign->id = ex ;
//ex->ex + ex|ex - ex|ex * ex|ex / ex|id|num
assign->id = val ;
val->val + val1|val - val1|val1
val1->val1 * val2|val1 / val2|val2
val2->( val )|id|num|true|false

////////////////////////////////////////////////////////////////////////////////////////
// 1 phep so sanh co the la dieu kien (a <= b) hoac la 1 bien (x) hoac la 1 so gi do (1)
////////////////////////////////////////////////////////////////////////////////////////
//cond->ex conds ex|id|num